cmake_minimum_required(VERSION 3.16)
include(FetchContent)
if(NOT WIN32)
  string(ASCII 27 Esc)
  set(ColourReset "${Esc}[m")
  set(ColourBold  "${Esc}[1m")
  set(Red         "${Esc}[31m")
  set(Green       "${Esc}[92m")
  set(Yellow      "${Esc}[33m")
  set(Blue        "${Esc}[34m")
  set(Magenta     "${Esc}[35m")
  set(Cyan        "${Esc}[36m")
  set(White       "${Esc}[37m")
  set(BoldRed     "${Esc}[1;31m")
  set(BoldGreen   "${Esc}[1;32m")
  set(BoldYellow  "${Esc}[1;33m")
  set(BoldBlue    "${Esc}[1;34m")
  set(BoldMagenta "${Esc}[1;35m")
  set(BoldCyan    "${Esc}[1;36m")
  set(BoldWhite   "${Esc}[1;37m")
endif()
project(flaschencat)
set(CMAKE_CXX_STANDARD 17)
add_executable(flaschencat "flaschencat.cpp")
if(CMAKE_CURRENT_BINARY_DIR STREQUAL CMAKE_CURRENT_LIST_DIR)
   message(FATAL_ERROR "${Red}In-source builds are not allowed.${ColourReset}")
endif()
if(NOT CMAKE_BUILD_TYPE)
	set(CMAKE_BUILD_TYPE Release)
	message(STATUS "${Yellow}Build type not specified, defaulting to release${ColourReset}")
endif()
FetchContent_Declare(
    pohxx
    GIT_REPOSITORY https://github.com/Fytch/ProgramOptions.hxx
)
FetchContent_GetProperties(pohxx)
if(NOT pohxx_POPULATED)
    FetchContent_Populate(pohxx)
    add_subdirectory(${pohxx_SOURCE_DIR} ${pohxx_BINARY_DIR})
endif()

FetchContent_Declare(
    mmap
    GIT_REPOSITORY https://github.com/manuel5975p/memmap
)
FetchContent_GetProperties(mmap)
if(NOT mmap_POPULATED)
    FetchContent_Populate(mmap)
    target_include_directories(flaschencat PUBLIC ${mmap_SOURCE_DIR})
endif()
target_link_libraries(flaschencat PUBLIC ProgramOptionsHxx)
